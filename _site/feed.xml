<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-10-07T18:17:43+08:00</updated><id>http://localhost:4000/</id><title type="html">羽光的博客</title><subtitle>Hi,你好啊.我是周耀,网名:羽光,这是我的博客,希望你在读过之后能给你带来帮助.</subtitle><author><name>zhouyao</name></author><entry><title type="html">Push已存在的代码到github</title><link href="http://localhost:4000/2018/10/07/Push%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%B0Github.html" rel="alternate" type="text/html" title="Push已存在的代码到github" /><published>2018-10-07T00:00:00+08:00</published><updated>2018-10-07T00:00:00+08:00</updated><id>http://localhost:4000/2018/10/07/Push%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%B0Github</id><content type="html" xml:base="http://localhost:4000/2018/10/07/Push%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%B0Github.html">&lt;h1 id=&quot;push-已存在的代码到github中&quot;&gt;Push 已存在的代码到Github中&lt;/h1&gt;

&lt;h2 id=&quot;方案一使用-bash&quot;&gt;方案一:使用 bash&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin https://github.com/zhouyao1994/sqlite-sourcecode-read.git
git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;方案二使用pycharm-ide-git-工具&quot;&gt;方案二:使用Pycharm IDE git 工具&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;设置remote origin&lt;/li&gt;
  &lt;li&gt;push代码&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zhouyao</name></author><summary type="html">Push 已存在的代码到Github中</summary></entry><entry><title type="html">Sql练习搜集资料</title><link href="http://localhost:4000/2018/10/04/SQL%E7%BB%83%E4%B9%A0%E6%90%9C%E9%9B%86%E8%B5%84%E6%96%99.html" rel="alternate" type="text/html" title="Sql练习搜集资料" /><published>2018-10-04T00:00:00+08:00</published><updated>2018-10-04T00:00:00+08:00</updated><id>http://localhost:4000/2018/10/04/SQL%E7%BB%83%E4%B9%A0%E6%90%9C%E9%9B%86%E8%B5%84%E6%96%99</id><content type="html" xml:base="http://localhost:4000/2018/10/04/SQL%E7%BB%83%E4%B9%A0%E6%90%9C%E9%9B%86%E8%B5%84%E6%96%99.html">&lt;h1 id=&quot;sql练习工具&quot;&gt;SQL练习工具&lt;/h1&gt;

&lt;h2 id=&quot;为什么要练习sql语句&quot;&gt;为什么要练习SQL语句&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.pluralsight.com/blog/software-development/5-reasons-to-learn-sql&quot;&gt;有着超过40年的标准历史&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;数据分析有五个阶段分别是,
    &lt;ul&gt;
      &lt;li&gt;step 1 - Individual contibutor&lt;/li&gt;
      &lt;li&gt;step 2 - Delegation&lt;/li&gt;
      &lt;li&gt;step 3 - Digitization&lt;/li&gt;
      &lt;li&gt;step 4 - Big Data and Analytics&lt;/li&gt;
      &lt;li&gt;stop 5 - Machine learning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;里面提到的核心观点,机器学习,或者说,深度学习,是用来放大人类的经验的,而不是替代人类经验.如果跳过第一步,意味着商业模式还不够完善,跳过第二部,意味着当核心人员离职,知识会被阻断,跳过第三部意味着没有自动化,跳过第四部,意味着数据很脏,不利于进行机器学习分析,&lt;/li&gt;
  &lt;li&gt;其中,从第三步到第四步,需要完整完善熟练的SQL进行数据处理,顺带进行数据清洗,不论是M,G,T都有对应的SQL工具来辅助进行数据处理&lt;/li&gt;
  &lt;li&gt;第五步,才是进入真正的机器学习,所以,不论在哪里,熟练的SQL语句一定是必要的&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;练习sql语句优秀的网站&quot;&gt;练习SQL语句优秀的网站&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerrank.com/&quot;&gt;hackerrank&lt;/a&gt;里面有基础的SQL语句练习,颜值高&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3resource.com/sql-exercises/&quot;&gt;w3resouce&lt;/a&gt;练习语句比较多,但是界面颜值较低,编辑器没有语法高亮&lt;/li&gt;
  &lt;li&gt;SQL&lt;a href=&quot;https://github.com/XD-DENG/SQL-exercise&quot;&gt;练习的github&lt;/a&gt;,和&lt;a href=&quot;https://github.com/wangruinju/SQL_Resources&quot;&gt;这个&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;商业网站展示的,一些&lt;a href=&quot;https://community.modeanalytics.com/sql/tutorial/sql-string-functions-for-cleaning/&quot;&gt;SQL高级用法实例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQL可以做字符串拼接处理,数字计算&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;SQL 中null 不能用=比较,只能用is来比较,参考&lt;a href=&quot;https://stackoverflow.com/questions/25641720/difference-between-and-is-in-sql-server&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zhouyao</name></author><summary type="html">SQL练习工具</summary></entry><entry><title type="html">数据结构排序试讲</title><link href="http://localhost:4000/2018/09/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%8E%92%E5%BA%8F%E8%AF%95%E8%AE%B2.html" rel="alternate" type="text/html" title="数据结构排序试讲" /><published>2018-09-26T00:00:00+08:00</published><updated>2018-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%8E%92%E5%BA%8F%E8%AF%95%E8%AE%B2</id><content type="html" xml:base="http://localhost:4000/2018/09/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%8E%92%E5%BA%8F%E8%AF%95%E8%AE%B2.html">&lt;h1 id=&quot;数据结构试讲之排序&quot;&gt;数据结构试讲之排序&lt;/h1&gt;

&lt;h2 id=&quot;插入排序&quot;&gt;插入排序&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;应用:打扑克牌,收试卷,交作业&lt;/li&gt;
  &lt;li&gt;档案整理工作:图书管理工作:&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;排序问题举例&quot;&gt;排序问题举例&lt;/h2&gt;

&lt;p&gt;[2,9,25,16,1,3,100,5],&lt;a href=&quot;http://panthema.net/2013/sound-of-sorting/&quot;&gt;插入排序举例&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;冒泡排序&quot;&gt;冒泡排序&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;冒泡排序&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/c/c8/Bubble-sort-example-300px.gif&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;时间复杂度分析&lt;script type=&quot;math/tex&quot;&gt;(n-1)+(n-2)+... 3+2+1=(n-1+1)*n/2 = 1/2*n^2&lt;/script&gt; 用计算机的行话就表示O(&lt;script type=&quot;math/tex&quot;&gt;n^2&lt;/script&gt;)&lt;/li&gt;
  &lt;li&gt;做法很傻,跟人肉手动比较一下运行时间&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先普及一下CPU主频的知识,3.2G,表示&lt;script type=&quot;math/tex&quot;&gt;3.2*10^9&lt;/script&gt;次时钟频率,假设,有10万个数字需要你排序,n^2 复杂度.10万*10万=100亿= &lt;script type=&quot;math/tex&quot;&gt;10 * 10^9&lt;/script&gt; 保守估计,也就5秒钟,就计算完了.我们人类天生是对大量级的数字不敏感的,我们学计算机的就要克服这种现象,凡事都要从量级的角度去考虑问题,不能仅仅局限在几十,几百几千的量级,要把眼光放到几百万,几千万,几十亿这个量级上思考.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;这个方法,不常用,但是很好理解.而且效果明显.实现起来方便.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;快速排序&quot;&gt;快速排序&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;快速排序&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif?1538104742565&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;跟冒泡排序相比,更不好理解&lt;/li&gt;
  &lt;li&gt;时间复杂度分析&lt;script type=&quot;math/tex&quot;&gt;\underbrace{n+2*\frac{n}{2}+4*\frac{n}{4}}&lt;/script&gt; 一共有&lt;script type=&quot;math/tex&quot;&gt;log_2^n&lt;/script&gt;个项,所以结果复杂度为:&lt;script type=&quot;math/tex&quot;&gt;n* log_2^n&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;应用,当有全校的档案,10万个数字排序,&lt;script type=&quot;math/tex&quot;&gt;n*log_2^n&lt;/script&gt; =100万=10^6 按CPU 的主频计算不到0.001秒,就计算完成了,保守估计1000倍的效率,如果同样的一个排序任务冒泡需要15分钟,快速排序只需要10天,才能算完.对比一下这计算差距,才能知道震撼&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/easy-learn-algorithm/fast-sort.html&quot;&gt;极客学院参考链接&lt;/a&gt;,维基百科&lt;a href=&quot;https://www.wikiwand.com/en/Quicksort&quot;&gt;参考链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;外部排序算法&quot;&gt;外部排序算法&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;外部排序&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif?1537845762878&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;解决的问题:内存放不下,&lt;/li&gt;
  &lt;li&gt;时间复杂度&lt;/li&gt;
  &lt;li&gt;直观的&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/c/c5/Merge_sort_animation2.gif&quot;&gt;演示示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;数据结构需要锻炼的技能&quot;&gt;数据结构需要锻炼的技能&lt;/h2&gt;

&lt;p&gt;在有限的资源和能力条件下,做出想要的效果.&lt;/p&gt;

&lt;h2 id=&quot;课程的参考链接&quot;&gt;课程的参考链接&lt;/h2&gt;

&lt;p&gt;如果你对排序算法感兴趣,可以去维基百科上查看&lt;a href=&quot;https://www.wikiwand.com/en/Sorting_algorithm&quot;&gt;英文维基百科&lt;/a&gt;,&lt;a href=&quot;https://www.wikiwand.com/en/Sorting_algorithm&quot;&gt;中文排序维基百科&lt;/a&gt;&lt;/p&gt;</content><author><name>zhouyao</name></author><summary type="html">数据结构试讲之排序</summary></entry><entry><title type="html">Google art介绍</title><link href="http://localhost:4000/2018/09/21/Google-Art%E4%BB%8B%E7%BB%8D.html" rel="alternate" type="text/html" title="Google art介绍" /><published>2018-09-21T00:00:00+08:00</published><updated>2018-09-21T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/21/Google%20Art%E4%BB%8B%E7%BB%8D</id><content type="html" xml:base="http://localhost:4000/2018/09/21/Google-Art%E4%BB%8B%E7%BB%8D.html">&lt;h1 id=&quot;google-art-介绍&quot;&gt;Google Art 介绍&lt;/h1&gt;

&lt;p&gt;Google Art 是一个把世界上著名的艺术品,和艺术博物馆,放到网上的网站,包括中国的&lt;a href=&quot;https://artsandculture.google.com/project/cafam&quot;&gt;中央美术院官网&lt;/a&gt;,中央美术院的&lt;a href=&quot;https://artsandculture.google.com/exhibit/iAKilJFvyCPlLg&quot;&gt;设计历史&lt;/a&gt;其中田横五百士这副画,最具有观赏意义,用户在欣赏过程中,会放大图片的局部,让你具体的了解到图片的细节,类似的还有&lt;a href=&quot;https://artsandculture.google.com/story/AQLi183TPs-TJw&quot;&gt;夯歌&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从史记中记载的故事虚构出的画作&lt;a href=&quot;https://artsandculture.google.com/story/hgLyXy269TwKKQ&quot;&gt;田横五百士&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;艺术家&lt;a href=&quot;https://artsandculture.google.com/exhibit/cgKyaJMWSJu-Lw&quot;&gt;徐悲鸿&lt;/a&gt;用艺术针砭时事&lt;/li&gt;
  &lt;li&gt;反应农民朴实的快乐,&lt;a href=&quot;https://artsandculture.google.com/story/AQLi183TPs-TJw&quot;&gt;夯歌&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;反应改良派的&lt;a href=&quot;https://artsandculture.google.com/asset/%E6%84%9A%E5%85%AC%E7%A7%BB%E5%B1%B1/8wFAHt3ehNYGZw&quot;&gt;愚翁移山&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;徐悲鸿女朋友&lt;a href=&quot;https://artsandculture.google.com/asset/%E5%AD%99%E5%A4%9A%E6%85%88%E5%83%8F/mAErNTGMiayb1w&quot;&gt;孙多慈&lt;/a&gt;,反应了徐悲鸿的浪漫情怀.没有钱,就画女朋友&lt;a href=&quot;https://artsandculture.google.com/asset/%E8%AF%BB%E4%B9%A6%E7%9A%84%E8%92%8B%E7%A2%A7%E8%96%87/BAHOQGyHvcm0Og&quot;&gt;读书时的蒋碧薇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;人类的&lt;a href=&quot;https://artsandculture.google.com/category/art-movement&quot;&gt;艺术运动&lt;/a&gt;&lt;/p&gt;</content><author><name>zhouyao</name></author><summary type="html">Google Art 介绍</summary></entry><entry><title type="html">Jupyter notebook介绍</title><link href="http://localhost:4000/2018/09/20/Jupyter-notebook%E4%BB%8B%E7%BB%8D.html" rel="alternate" type="text/html" title="Jupyter notebook介绍" /><published>2018-09-20T00:00:00+08:00</published><updated>2018-09-20T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/20/Jupyter%20notebook%E4%BB%8B%E7%BB%8D</id><content type="html" xml:base="http://localhost:4000/2018/09/20/Jupyter-notebook%E4%BB%8B%E7%BB%8D.html">&lt;h1 id=&quot;jupyter-notebook-介绍&quot;&gt;Jupyter Notebook 介绍&lt;/h1&gt;

&lt;h2 id=&quot;jupyter-notebook&quot;&gt;Jupyter notebook&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;中文的&lt;a href=&quot;https://v.youku.com/v_show/id_XMzU2NDA3OTMyNA==.html?spm=a2h0k.11417342.soresults.dtitle&quot;&gt; Jupyter notebook &lt;/a&gt;介绍视频资料,包括,安装,运行使用,Jupyter Notebook 支持多种内核例如: Python, R, Lua, Java, C,你可以在这个网站上找到 Notebook 支持的其他内核&lt;/li&gt;
  &lt;li&gt;Jupyter notebook 的&lt;a href=&quot;&quot;&gt;官网&lt;/a&gt;,快捷键使用,&lt;/li&gt;
  &lt;li&gt;大量的教程是使用 Notebook 形式编写的.例如一些在线课程:&lt;a href=&quot;&quot;&gt;Tensorflow Model&lt;/a&gt;,&lt;a href=&quot;&quot;&gt;线性代数课程&lt;/a&gt;, &lt;a href=&quot;&quot;&gt;Coursera Deep Learning&lt;/a&gt;.例如:一些&lt;a href=&quot;&quot;&gt;书籍&lt;/a&gt; 除此之外还能看到一个 &lt;a href=&quot;&quot;&gt;Nbview&lt;/a&gt; 的网站,能方便的查看 Notebook ,&lt;/li&gt;
  &lt;li&gt;Jupyter Notebook 优点:网页端,交互式编程,你可以在pycon 大会上,看到有关 Notebook 的&lt;a href=&quot;&quot;&gt;演讲&lt;/a&gt; 和使用的案例分享&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jupyter-lab&quot;&gt;Jupyter Lab&lt;/h2&gt;

&lt;p&gt;Jupyter Lab 是Jupyter Notebook 的下一代产品,在未来,可能会替代Jupyter Notebook,你可以在&lt;a href=&quot;&quot;&gt;这里&lt;/a&gt;看到Notebook lab 的一些介绍&lt;/p&gt;

&lt;p&gt;官方的网站,有一些介绍,&lt;/p&gt;</content><author><name>zhouyao</name></author><summary type="html">Jupyter Notebook 介绍</summary></entry><entry><title type="html">微服务架构初探 To Do</title><link href="http://localhost:4000/2018/09/19/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%88%9D%E6%8E%A2-to-do.html" rel="alternate" type="text/html" title="微服务架构初探 To Do" /><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/19/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%88%9D%E6%8E%A2-to-do</id><content type="html" xml:base="http://localhost:4000/2018/09/19/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%88%9D%E6%8E%A2-to-do.html">&lt;h1 id=&quot;微服务架构&quot;&gt;微服务架构&lt;/h1&gt;

&lt;p&gt;微服务的&lt;a href=&quot;https://microservices.io/patterns/microservices.html&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;初期开发的时候,不利于&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zhouyao</name></author><summary type="html">微服务架构</summary></entry><entry><title type="html">Estimator模式初探</title><link href="http://localhost:4000/2018/09/15/Estimator%E6%A8%A1%E5%BC%8F%E5%88%9D%E6%8E%A2.html" rel="alternate" type="text/html" title="Estimator模式初探" /><published>2018-09-15T00:00:00+08:00</published><updated>2018-09-15T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/15/Estimator%E6%A8%A1%E5%BC%8F%E5%88%9D%E6%8E%A2</id><content type="html" xml:base="http://localhost:4000/2018/09/15/Estimator%E6%A8%A1%E5%BC%8F%E5%88%9D%E6%8E%A2.html">&lt;h1 id=&quot;estimator-模式初探&quot;&gt;Estimator 模式初探&lt;/h1&gt;

&lt;h2 id=&quot;estimator-优点&quot;&gt;Estimator 优点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;多平台运行,而不需要更改参数&lt;/li&gt;
  &lt;li&gt;方便的在开发者之间共享,(相当于把模型封装了,屏蔽底层的代码),更快的原型系统&lt;/li&gt;
  &lt;li&gt;便于调试,包括,失败创建检查点,Graph,初始化,Tensorboard使用,能让用户向使用Sk-learn那样使用TensorFlow&lt;/li&gt;
  &lt;li&gt;与之了常用的一些分类模型,例如&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TensorFlow文档&lt;a href=&quot;https://www.tensorflow.org/guide/estimators#advantages_of_estimators&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;estimator-流程&quot;&gt;Estimator 流程&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/guide/estimators#structure_of_a_pre-made_estimators_program&quot;&gt;流程文档&lt;/a&gt;这个章节说出了机器学习的精髓,主要包括四大步骤:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;数据导入函数&lt;/li&gt;
  &lt;li&gt;定义特征列&lt;/li&gt;
  &lt;li&gt;实例化相应的 Estimator&lt;/li&gt;
  &lt;li&gt;调用训练,评估,推论等&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个步骤,也大致遵循机器学习 sklearn 的流程,深度学习&lt;/p&gt;

&lt;h2 id=&quot;estimator-实验&quot;&gt;Estimator 实验&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;在 Cousera 中的课程中提供了练习文件&lt;a href=&quot;https://github.com/GoogleCloudPlatform/training-data-analyst/blob/master/courses/machine_learning/deepdive/03_tensorflow/b_estimator.ipynb&quot;&gt;Github trainning-data-analyst&lt;/a&gt;提供了很好范例&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zhouyao</name></author><summary type="html">Estimator 模式初探</summary></entry><entry><title type="html">练习深度学习指南 To Do</title><link href="http://localhost:4000/2018/09/14/%E7%BB%83%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97-to-do.html" rel="alternate" type="text/html" title="练习深度学习指南 To Do" /><published>2018-09-14T00:00:00+08:00</published><updated>2018-09-14T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/14/%E7%BB%83%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97-to-do</id><content type="html" xml:base="http://localhost:4000/2018/09/14/%E7%BB%83%E4%B9%A0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97-to-do.html">&lt;h1 id=&quot;练习深度学习指南&quot;&gt;练习深度学习指南&lt;/h1&gt;

&lt;h2 id=&quot;为什么要写这个系列的练习指南&quot;&gt;为什么要写这个系列的练习指南?&lt;/h2&gt;

&lt;p&gt;大多数人,当然也包括我自己,在应用到新的知识之前,往往需要经历从理解–&amp;gt;练习–&amp;gt;应用,这三个过程,理解这一部分往往通过文档,老师,youtube,书籍,论文,视频入门.应用这部分,在文档中往往&lt;/p&gt;

&lt;p&gt;大多数人,包括我自己,在学习 TensorFlow 的过程中,往往需要经历,理解–&amp;gt;练习–&amp;gt;应用–&amp;gt;理解,这个闭环过程,才能在真正的实际应用中,才会灵活运用.我在 Cousera 上学习深度学习专项课程的时候,发现每个Cousera课程后面都会附带有在线编程的练习,以帮助学生能更好的理解一个概念,这个在线编程练习,往往只需要学生完成中间的某一个代码的填空,完成这个填空需要大量的阅读例如官方文档,课程的PPT,额外的材料等,需要阅读的材料,往往多会在课程的 Jupyter Notebook 中有链接,这种学习方式效果很好,学习者做完的时候,也会有很多的成就感.这给我一个很深的体会,理想的课后练习,本应该就是这样吧,&lt;/p&gt;

&lt;p&gt;我理解 TensorFlow 框架的时候,主要的渠道是&lt;a href=&quot;&quot;&gt;斯坦福cs20i&lt;/a&gt; 和TensorFlow官网文档,应用主要渠道是TensorFlow官方的案例.由于没有真正的实践项目中间的练习环节很是缺乏,这也是我想自己编写本次练习材料的主要原因,目前计划主要从以下几个方面来创造练习文件&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;01-Premade Estimators 练习&lt;/li&gt;
  &lt;li&gt;02-特征工程练习&lt;/li&gt;
  &lt;li&gt;03-导入数据练习&lt;/li&gt;
  &lt;li&gt;04-Keras 练习&lt;/li&gt;
  &lt;li&gt;05-Input Pipline练习&lt;/li&gt;
  &lt;li&gt;06-可视化练习&lt;/li&gt;
  &lt;li&gt;07-GPU 代码调优练习&lt;/li&gt;
  &lt;li&gt;08-TPU 练习&lt;/li&gt;
  &lt;li&gt;09-Layer 层练习&lt;/li&gt;
  &lt;li&gt;10-底层 API 练习&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;练习文件,全部可以在colab上运行,也可下载到本地,用 Jupyter Notebook 运行&lt;/p&gt;</content><author><name>zhouyao</name></author><summary type="html">练习深度学习指南</summary></entry><entry><title type="html">可视化工具altair</title><link href="http://localhost:4000/2018/09/14/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7Altair.html" rel="alternate" type="text/html" title="可视化工具altair" /><published>2018-09-14T00:00:00+08:00</published><updated>2018-09-14T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/14/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7Altair</id><content type="html" xml:base="http://localhost:4000/2018/09/14/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7Altair.html">&lt;h1 id=&quot;从google-colab-中衍生出的知识&quot;&gt;从Google colab 中衍生出的知识&lt;/h1&gt;

&lt;h2 id=&quot;基于描述性语言的可视化工具altair&quot;&gt;基于描述性语言的可视化工具altair&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://altair-viz.github.io/getting_started/overview.html&quot;&gt;官网网站&lt;/a&gt;,特点基于描述性语言例如:&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mark_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Horsepower'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Miles_per_Gallon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Origin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可交互性的图表,实时调整数据的格式,并导出&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有一个可以交互的&lt;a href=&quot;https://vega.github.io/&quot;&gt; Editor &lt;/a&gt; 来自华盛顿大小的&lt;a href=&quot;https://idl.cs.washington.edu/&quot;&gt;交互式可视化实验室&lt;/a&gt;,实验室有很多有趣的项目,例如&lt;a href=&quot;https://vimeo.com/channels/uwdata/93181322&quot;&gt;身体可视化&lt;/a&gt;的 Body Diagrams ,和大名鼎鼎的&lt;a href=&quot;https://d3js.org/&quot;&gt;D3.js&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;altair-资料&quot;&gt;Altair 资料&lt;/h2&gt;

&lt;p&gt;Altair pycon 2018&lt;a href=&quot;https://www.youtube.com/watch?v=ms29ZPUKxbU&quot;&gt;演讲介绍&lt;/a&gt;,&lt;a href=&quot;https://altair-viz.github.io/&quot;&gt;文档&lt;/a&gt;,&lt;a href=&quot;https://github.com/altair-viz/altair-tutorial&quot;&gt;Tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;类似的可视化工具 Voyage ,&lt;a href=&quot;https://vimeo.com/199084718&quot;&gt;介绍视频&lt;/a&gt;,&lt;a href=&quot;https://github.com/vega/voyager&quot;&gt; github 源码&lt;/a&gt;, &lt;a href=&quot;https://data-voyager.gitbook.io/voyager/&quot;&gt;文档&lt;/a&gt;,试用&lt;a href=&quot;http://vega.github.io/voyager/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;matplotlib-与-altair&quot;&gt;Matplotlib 与 Altair&lt;/h2&gt;

&lt;p&gt;Matplotlib特点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Matlab语法&lt;/li&gt;
  &lt;li&gt;强大的画图工具&lt;/li&gt;
  &lt;li&gt;有各种渲染的后端&lt;/li&gt;
  &lt;li&gt;测试的很好,稳定有效的运行了15年&lt;/li&gt;
  &lt;li&gt;API imperative 而且冗长,无法交互,无法web化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API的特点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;步骤式的,把x放这里,y放这里表明事情怎么做&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;灵感来自colab-自带的示例代码&quot;&gt;灵感来自Colab 自带的示例代码&lt;/h2&gt;

&lt;p&gt;可以使用 Code Snipt 中的 Filter 筛选功能,关键字筛选代码并查看.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可视化工具
    &lt;ul&gt;
      &lt;li&gt;Altair&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;显示方式
    &lt;ul&gt;
      &lt;li&gt;JavaScript&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;数据集操作
    &lt;ul&gt;
      &lt;li&gt;从 Google Sheet 中导入,导出数据&lt;/li&gt;
      &lt;li&gt;从 Google Drive 中导入导出,挂载到Colab中&lt;/li&gt;
      &lt;li&gt;从 Google Storage 中导入,导出数据&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>zhouyao</name></author><summary type="html">从Google colab 中衍生出的知识</summary></entry><entry><title type="html">Awesom Courses</title><link href="http://localhost:4000/2018/09/13/Awesom-courses.html" rel="alternate" type="text/html" title="Awesom Courses" /><published>2018-09-13T00:00:00+08:00</published><updated>2018-09-13T00:00:00+08:00</updated><id>http://localhost:4000/2018/09/13/Awesom-courses</id><content type="html" xml:base="http://localhost:4000/2018/09/13/Awesom-courses.html">&lt;h1 id=&quot;推荐的有用的计算机课程&quot;&gt;推荐的有用的计算机课程&lt;/h1&gt;

&lt;h2 id=&quot;我自己学过的&quot;&gt;我自己学过的&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Andrew NG Deeplearning&lt;/li&gt;
  &lt;li&gt;prakhar搜集的&lt;a href=&quot;https://github.com/prakhar1989/awesome-courses&quot;&gt;课程资料&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CMU &lt;a href=&quot;https://15445.courses.cs.cmu.edu/fall2018/&quot;&gt;Database 课程&lt;/a&gt;,包括&lt;a href=&quot;https://www.youtube.com/watch?v=vyVGm_2iFwU&amp;amp;list=PLSE8ODhjZXja3hgmuwhf89qboV1kOxMx7&quot;&gt; Youtube 链接&lt;/a&gt;,这个课程要求修改Sqlite源码,你可以在 Github 上找到&lt;a href=&quot;https://github.com/xingdl2007/cmu15-445&quot;&gt;其他同学做过的作业&lt;/a&gt;,或者你自己在 Google 上搜索,课程名+Github 做关键字&lt;/li&gt;
  &lt;li&gt;这个&lt;a href=&quot;https://youtu.be/PorfLSr3DDI&quot;&gt;视频&lt;/a&gt;介绍了用 GDB 进行可视化 Debug 的例子,很有用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-education&quot;&gt;AWS Education&lt;/h2&gt;

&lt;p&gt;实验一使用lambda 函数,参考资料&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&quot;&gt;Best Practices for a Pragmatic RESTful API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html&quot;&gt;Amazon API Gateway Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;Amazon Lambda Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://microservices.io/index.html&quot;&gt;Microservice Architecture patterns and best practices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ics.uci.edu/%7Efielding/pubs/dissertation/rest_arch_style.htm&quot;&gt;Representational State Transfer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html&quot;&gt;Creating an API Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;函数名表示API.基本描述,表示注释&lt;/p&gt;</content><author><name>zhouyao</name></author><summary type="html">推荐的有用的计算机课程</summary></entry></feed>